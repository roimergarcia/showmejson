/** Showmejson
 * @author Roimer Garcia
 *      contact roimergarcia@gmail.com
 *      source available in https://github.com/roimergarcia/showmejson
 *      date 2022-01-05
 * @license  CC BY-SA 3.0 http://creativecommons.org/licenses/by-sa/3.0/deed.es
 * 
*/
"use strict";const showmejson=function(){const defaultOptions={includeStyles:!0,maxDepth:10},DEFAULT_STYLES=" \n    .showmejson {\n        --smj-border-color: #CCCCCC;\n        --smj-border-radius: 4px;\n        --smj-spacing: 0.5rem;\n        display: block;\n        padding: var(--smj-spacing);\n        margin: var(--smj-spacing);\n        border: 1px solid var(--smj-border-color);\n        border-radius: var(--smj-border-radius);\n    }\n    .showmejson > details {\n        margin: 0;\n    }\n    .showmejson details {\n        border: 1px solid #aaa;\n        border-radius: 4px;\n        padding: var(--smj-spacing);\n        margin: var(--smj-spacing);\n    }\n    .showmejson summary {\n        margin: calc( - var(--smj-spacing)) ;\n        padding: var(--smj-spacing);\n    }\n    .showmejson .details[open] summary{\n        display: none;\n    }\n    ",getFragment=function(obj,options){console.log(typeof obj);const opt=Object.assign({},defaultOptions,options),fragment=document.createDocumentFragment(),container=document.createElement("div");if(container.classList.add("showmejson"),opt.includeStyles){const styles=document.createElement("style");styles.innerHTML=DEFAULT_STYLES,container.append(styles)}return renderItem(container,opt.maxDepth-1,obj,""),fragment.append(container),fragment},renderItem=function(container,remainingDepth,obj,name){if("string"==typeof obj){const singleValue=document.createElement("pre");return singleValue.classList.add("showmejson__plain-text"),singleValue.textContent=(name?name+":":"")+`${JSON.stringify(obj).replace(/(\\n|\\r)/g,"$1\n")}`,void container.append(singleValue)}if(null===obj||["boolean","number","null","undefined"].includes(typeof obj)){const singleValue=document.createElement("div");return singleValue.textContent=(name?name+":":"")+obj,void container.append(singleValue)}if("symbol"==typeof obj){const singleValue=document.createElement("div");return singleValue.textContent=(name?name+":":"")+obj.toString(),void container.append(singleValue)}if(0===remainingDepth){const singleValue=document.createElement("pre");singleValue.textContent=(name?name+":":"")+typeof obj,block.append(singleValue)}const block=document.createElement("details"),summary=document.createElement("summary");summary.textContent=(name?name+":":"")+`[${typeof obj}]`,block.open=!name,block.append(summary);const props=Object.getOwnPropertyNames(obj);props.forEach((value,index,array)=>{console.log({n:value,v:obj[value],t:typeof obj[value]}),renderItem(block,remainingDepth-1,obj[value],value)}),container.append(block)};return{getFragment:getFragment}}();export{showmejson};